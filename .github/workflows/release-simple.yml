name: Simple Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'BilirkisiMasaustu'

jobs:
  build-and-release:
    runs-on: windows-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Get version from tag or input
      id: get_version
      run: |
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        } else {
          $version = "${{ github.ref_name }}"
        }
        $version = $version -replace '^v', ''
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "TAG_NAME=v$version" >> $env:GITHUB_OUTPUT
        Write-Host "Version: $version"
      shell: powershell

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_NAME }}.csproj

    - name: Build project
      run: dotnet build ${{ env.PROJECT_NAME }}.csproj --configuration Release --no-restore

    - name: Publish application
      run: |
        dotnet publish ${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained true `
          --output ./publish `
          /p:PublishSingleFile=true `
          /p:EnableCompressionInSingleFile=true `
          /p:DebuggerSupport=false `
          /p:PublishReadyToRun=true `
          /p:IncludeNativeLibrariesForSelfExtract=true
      shell: powershell

    - name: Create release package
      run: |
        $version = "${{ steps.get_version.outputs.VERSION }}"
        $packageName = "UzmanRaporu-v$version-win-x64"
        
        # Ana klasÃ¶rÃ¼ oluÅŸtur
        New-Item -ItemType Directory -Path $packageName -Force
        
        # Exe dosyasÄ±nÄ± kopyala
        Copy-Item "./publish/${{ env.PROJECT_NAME }}.exe" "./$packageName/"
        
        # Ä°ller klasÃ¶rÃ¼nÃ¼ kopyala
        Copy-Item "./iller" "./$packageName/" -Recurse
        
        # README ve LICENSE dosyalarÄ±nÄ± kopyala
        if (Test-Path "README.md") { Copy-Item "README.md" "./$packageName/" }
        if (Test-Path "LICENSE") { Copy-Item "LICENSE" "./$packageName/" }
        
        # Kurulum talimatlarÄ±
        $instructions = @"
        Uzman Raporu v$version - Kurulum
        
        1. BilirkisiMasaustu.exe dosyasina cift tiklayin
        2. Uygulama dogrudan calisacaktir
        
        Gereksinimler: Yok (.NET 8 dahil)
        Gelistirici: Saffet Celik
        E-posta: iletisim@saffetcelik.com
        "@
        
        Set-Content "./$packageName/KURULUM.txt" $instructions
        
        # ZIP dosyasÄ± oluÅŸtur
        Compress-Archive -Path "./$packageName/*" -DestinationPath "./$packageName.zip" -Force
        
        # Dosya boyutlarÄ±nÄ± gÃ¶ster
        $exeSize = [math]::Round((Get-Item "./publish/${{ env.PROJECT_NAME }}.exe").Length / 1MB, 2)
        $zipSize = [math]::Round((Get-Item "./$packageName.zip").Length / 1MB, 2)
        
        Write-Host "Executable size: $exeSize MB"
        Write-Host "Package size: $zipSize MB"
        
        echo "PACKAGE_NAME=$packageName" >> $env:GITHUB_OUTPUT
        echo "EXE_SIZE=$exeSize" >> $env:GITHUB_OUTPUT
        echo "ZIP_SIZE=$zipSize" >> $env:GITHUB_OUTPUT
      shell: powershell
      id: package

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
        name: "Uzman Raporu ${{ steps.get_version.outputs.TAG_NAME }}"
        body: |
          ## ğŸš€ Uzman Raporu ${{ steps.get_version.outputs.VERSION }}
          
          ### ğŸ“¦ Ä°ndirme Bilgileri
          - **Executable Boyutu:** ${{ steps.package.outputs.EXE_SIZE }} MB
          - **Paket Boyutu:** ${{ steps.package.outputs.ZIP_SIZE }} MB
          - **Platform:** Windows x64
          - **Gereksinimler:** HiÃ§biri (.NET 8 dahil)
          
          ### ğŸ”§ Kurulum
          1. ZIP dosyasÄ±nÄ± indirin ve Ã§Ä±kartÄ±n
          2. `${{ env.PROJECT_NAME }}.exe` dosyasÄ±nÄ± Ã§alÄ±ÅŸtÄ±rÄ±n
          3. Herhangi bir ek kurulum gerekmez!
          
          ### âœ¨ Ã–zellikler
          - Self-contained deployment (baÄŸÄ±msÄ±z Ã§alÄ±ÅŸÄ±r)
          - Optimized binary (kÃ¼Ã§Ã¼k boyut)
          - Ä°ller klasÃ¶rÃ¼ dahil
          - Modern WPF arayÃ¼zÃ¼
          - GeliÅŸmiÅŸ arama ve filtreleme
          - Ä°statistik gÃ¶rÃ¼ntÃ¼leme
          
          ### ğŸ“§ Ä°letiÅŸim
          - **GeliÅŸtirici:** Saffet Ã‡elik
          - **E-posta:** iletisim@saffetcelik.com
          - **GitHub:** github.com/saffetcelik
        files: |
          ${{ steps.package.outputs.PACKAGE_NAME }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
